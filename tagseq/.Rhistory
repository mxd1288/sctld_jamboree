getwd() #### remove the Rmd in this path as we want the tagseq folder as the root directory, see below
library(tximport)
library(DESeq2)
library(tidyverse)
library(tximport)
library(ComplexHeatmap)
library(DEGreport)
library(limma)
library(edgeR)
library(pheatmap)
getwd() #### remove the Rmd in this path as we want the tagseq folder as the root directory, see below
require("knitr")
opts_knit$set(root.dir = "~/Desktop/SCTLD_jamboree/sctld_jamboree/tagseq/")
#Loading quantification data output from the slippery Salmon
setwd("./data/ofav_salmon_quant/")
ofavall <- list.files(path = ".", full.names = F, pattern = "\\_salmon$")
FILESofav <- file.path(ofavall, "quant.sf")
names(FILESofav) <- ofavall
head(FILESofav)
all(file.exists(FILESofav))
#Loading quantification data output from the slippery Salmon
setwd("./data/mcav_salmon_quant/")
mcavall <- list.files(path = ".", full.names = F, pattern = "\\_salmon$")
FILESmcav <- file.path(mcavall, "quant.sf")
names(FILESmcav) <- mcavall
head(FILESmcav)
all(file.exists(FILESmcav))
#Importing the count data using salmon quant.sf files and the text to gene file
setwd("./data/ofav_salmon_quant/")
txi.salmon.count_ofav <- tximport(FILESofav, type = "salmon", txOut = TRUE )
#Importing the count data using salmon quant.sf files and the text to gene file
setwd("./data/mcav_salmon_quant/")
txi.salmon.count_mcav <- tximport(FILESmcav, type = "salmon", txOut = TRUE )
write.csv(txi.salmon.count_mcav$counts, file = "./data/mcav_counts.csv")
write.csv(txi.salmon.count_mcav$abundance , file = "./data/mcav_abundance.csv")
write.csv(txi.salmon.count_mcav$length, file = "./mcav_length.csv")
write.csv(txi.salmon.count_ofav$counts, file = "./data/ofav_counts.csv")
write.csv(txi.salmon.count_ofav$abundance , file = "./data/ofav_abundance.csv")
write.csv(txi.salmon.count_ofav$length, file = "./data/ofav_length.csv")
meta <- read.csv(file = "./data/metadata.csv")
str(meta)
meta %>% filter(salmon_label %in% mcavall) -> mcav_meta
## Check our salmon and meta lengths the same
length(mcavall)
nrow(mcav_meta)
meta %>% filter(salmon_label %in% ofavall) -> ofav_meta
length(ofavall)
nrow(ofav_meta)
mcav_annot <- read.csv(file = "./data/mcav_annot.csv")
str(mcav_annot)
mcav_annot %>%
separate(sprot_Top_BLASTX_hit,
sep = "`",
into = c("tophit", "secondhit")) %>%
separate(
tophit,
sep = "/",
into = c(
"Swissprot_ID",
"SP_ID",
"Qvalue",
"percent_sim",
"e_value",
"Gene_name",
"organism"
)
) %>%
separate(
secondhit,
sep = "/",
into = c(
"SH_Swissprot_ID",
"SH_SP_ID",
"SH_Qvalue",
"SH_percent_sim",
"SH_e_value",
"SH_Gene_name",
"SH_organism"
)
) %>%
separate(eggnog,
sep = "\\^",
into = c("eggnogid", "eggnog_annot")) -> mcav_annot_tidy
mcav_meta
#making the dds model to use in deseq2
ddsmcav = DESeqDataSetFromTximport(txi.salmon.count_mcav, mcav_meta, ~ Correct_treatment)
#making the dds model to use in deseq2
ddsmcav = DESeqDataSetFromTximport(txi.salmon.count_mcav, mcav_meta, ~ Correct_treatment)
## VSD stabilisation and visulisation
vsdall <- vst(ddsmcav, blind=FALSE)
plotPCA(vsdmcav, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdall, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdall, intgroup=c("Project"), returnData = F)
## VSD stabilisation and visulisation
vsdall <- vst(ddsmcav, blind=FALSE)
vsdyear <- vst(ddsmcav)
assay(vsdyear) <- limma::removeBatchEffect(assay(vsdyear), vsdyear$Project)
mcav_meta
plotPCA(vsdall, intgroup=c("Project"), returnData = F)
plotPCA(vsdyear, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdall, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdyear, intgroup=c("Correct_treatment"), returnData = F)
txi.salmon.count_ofav$counts
ofav_meta
#Loading quantification data output from the slippery Salmon
setwd("./data/ofav_salmon_quant/")
ofavall <- list.files(path = ".", full.names = F, pattern = "\\_salmon$")
FILESofav <- file.path(ofavall, "quant.sf")
names(FILESofav) <- ofavall
head(FILESofav)
all(file.exists(FILESofav))
#Loading quantification data output from the slippery Salmon
setwd("./data/mcav_salmon_quant/")
mcavall <- list.files(path = ".", full.names = F, pattern = "\\_salmon$")
FILESmcav <- file.path(mcavall, "quant.sf")
names(FILESmcav) <- mcavall
head(FILESmcav)
all(file.exists(FILESmcav))
#Importing the count data using salmon quant.sf files and the text to gene file
setwd("./data/ofav_salmon_quant/")
txi.salmon.count_ofav <- tximport(FILESofav, type = "salmon", txOut = TRUE )
txi.salmon.count_ofav$counts
ofav_meta
#Importing the count data using salmon quant.sf files and the text to gene file
setwd("./data/mcav_salmon_quant/")
txi.salmon.count_mcav <- tximport(FILESmcav, type = "salmon", txOut = TRUE )
txi.salmon.count_mcav$counts
meta <- read.csv(file = "./data/metadata.csv")
str(meta)
meta %>% filter(salmon_label %in% mcavall) -> mcav_meta
## Check our salmon and meta lengths the same
length(mcavall)
nrow(mcav_meta)
meta %>% filter(salmon_label %in% ofavall) -> ofav_meta
length(ofavall)
nrow(ofav_meta)
## VSD stabilisation and visulisation
vsdall <- vst(ddsmcav, blind=FALSE)
#making the dds model to use in deseq2
ddsmcav = DESeqDataSetFromTximport(txi.salmon.count_mcav, mcav_meta, ~ Correct_treatment)
## VSD stabilisation and visulisation
vsdall <- vst(ddsmcav, blind=FALSE)
#vsdyear <- vst(ddsmcav)
#assay(vsdyear) <- limma::removeBatchEffect(assay(vsdyear), vsdyear$Project)
plotPCA(vsdall, intgroup=c("Correct_treatment"), returnData = F)
ddsofav <- DESeqDataSetFromTximport(txi.salmon.count_ofav, ofav_meta, ~ Correct_treatment)
vsdall <- vst(ddsofav, blind = F)
## VSD stabilisation and visulisation
vsdmcav <- vst(ddsmcav, blind=FALSE)
#vsdyear <- vst(ddsmcav)
#assay(vsdyear) <- limma::removeBatchEffect(assay(vsdyear), vsdyear$Project)
vsdofav <- vst(ddsofav, blind = F)
## VSD stabilisation and visulisation
vsdmcav <- vst(ddsmcav, blind=FALSE)
#vsdyear <- vst(ddsmcav)
#assay(vsdyear) <- limma::removeBatchEffect(assay(vsdyear), vsdyear$Project)
vsdofav <- vst(ddsofav, blind = F)
plotPCA(vsdmcav, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdofav, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdofav, intgroup=c("Project"), returnData = F)
ofav_meta
plotPCA(vsdofav, intgroup=c("Date.collected"), returnData = F)
assay(ddsmcav)
mcav_counts <- txi.salmon.count_mcav$counts
mcav_counts
dds_mcav <- DESeqDataSetFromMatrix(mcav_counts, mcav_meta, ~ Correct_treatment)
dds_mcav <- DESeqDataSetFromTximport(mcav_counts, mcav_meta, ~ Correct_treatment)
rownames(sampleTable) <- colnames(txi.salmon.count_mcav$counts)
rownames(mcav_meta) <- colnames(txi.salmon.count_mcav$counts)
dds_mcav <- DESeqDataSetFromTximport(mcav_counts, mcav_meta, ~ Correct_treatment)
View(mcav_meta)
dds_mcav <- DESeqDataSetFromMatrix(mcav_counts, mcav_meta, ~ Correct_treatment)
mcav_counts
dds_mcav <- DESeqDataSetFromMatrix(mcav_counts, mcav_meta, ~ Correct_treatment)
dds_mcav <- DESeqDataSetFromMatrix(round(mcav_counts), mcav_meta, ~ Correct_treatment)
vsd_mcav <- vst(dds_mcav, blind = F)
plotPCA(vsd_mcav, intgroup=c("Correct_treatment", returnData = F))
dds_mcav <- DESeqDataSetFromMatrix(round(mcav_counts), mcav_meta, ~ Correct_treatment)
vsd_mcav <- vst(dds_mcav, blind = F)
plotPCA(vsd_mcav, intgroup=c("Correct_treatment"), returnData = F)
rownames(mcav_meta) <- colnames(mcav_counts)
mcav_counts <- txi.salmon.count_mcav$counts
rownames(mcav_meta) <- colnames(mcav_counts)
dds_mcav <- DESeqDataSetFromMatrix(round(mcav_counts), mcav_meta, ~ Correct_treatment)
ofav_counts <- txi.salmon.count_ofav$counts
rownames(ofav_meta) <- colnames(ofav_counts)
dds_ofav <- DESeqDataSetFromMatrix(round(ofav_counts), ofav_meta, ~ Correct_treatment)
vsd_mcav <- vst(dds_mcav, blind = F)
vsd_ofav <- vst(dds_ofav, blind = F)
plotPCA(vsdmcav, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsdofav, intgroup=c("Date.collected"), returnData = F)
plotPCA(vsd_mcav, intgroup=c("Correct_treatment"), returnData = F)
plotPCA(vsd_ofav, intgroup=c("Correct_treatment"), returnData = F)
